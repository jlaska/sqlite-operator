# Version management for SQLite Operator
# This file defines version variables used across the project

# Semantic version (update this for releases)
VERSION ?= v0.1.0

# Container image settings
REGISTRY ?= quay.io
ORG ?= jlaska
IMAGE_NAME ?= sqlite-operator
IMG ?= $(REGISTRY)/$(ORG)/$(IMAGE_NAME):$(VERSION)

# Kubernetes settings  
NAMESPACE ?= sqlite-operator-system
KUBECONFIG ?= ~/.kube/config

# Build settings
GOOS ?= $(shell go env GOOS)
GOARCH ?= $(shell go env GOARCH)
CGO_ENABLED ?= 0

# Tools versions
CONTROLLER_TOOLS_VERSION ?= v0.18.0
KUSTOMIZE_VERSION ?= v5.0.1
ENVTEST_K8S_VERSION ?= 1.33.0

.PHONY: version
version: ## Display version information
	@echo "Version: $(VERSION)"
	@echo "Image: $(IMG)"
	@echo "Registry: $(REGISTRY)"
	@echo "Namespace: $(NAMESPACE)"

.PHONY: version-bump-patch
version-bump-patch: ## Bump patch version (v1.2.3 -> v1.2.4)
	$(eval NEW_VERSION := $(shell echo $(VERSION) | sed 's/v//' | awk -F. '{$$3=$$3+1; print "v"$$1"."$$2"."$$3}'))
	@echo "Bumping version from $(VERSION) to $(NEW_VERSION)"
	@sed -i.bak 's/VERSION ?= $(VERSION)/VERSION ?= $(NEW_VERSION)/' Makefile.versions
	@rm -f Makefile.versions.bak

.PHONY: version-bump-minor  
version-bump-minor: ## Bump minor version (v1.2.3 -> v1.3.0)
	$(eval NEW_VERSION := $(shell echo $(VERSION) | sed 's/v//' | awk -F. '{$$2=$$2+1; $$3=0; print "v"$$1"."$$2"."$$3}'))
	@echo "Bumping version from $(VERSION) to $(NEW_VERSION)"
	@sed -i.bak 's/VERSION ?= $(VERSION)/VERSION ?= $(NEW_VERSION)/' Makefile.versions
	@rm -f Makefile.versions.bak

.PHONY: version-bump-major
version-bump-major: ## Bump major version (v1.2.3 -> v2.0.0)  
	$(eval NEW_VERSION := $(shell echo $(VERSION) | sed 's/v//' | awk -F. '{$$1=$$1+1; $$2=0; $$3=0; print "v"$$1"."$$2"."$$3}'))
	@echo "Bumping version from $(VERSION) to $(NEW_VERSION)"
	@sed -i.bak 's/VERSION ?= $(VERSION)/VERSION ?= $(NEW_VERSION)/' Makefile.versions
	@rm -f Makefile.versions.bak